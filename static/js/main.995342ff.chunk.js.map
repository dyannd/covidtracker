{"version":3,"sources":["components/DisplayTab.jsx","components/Content.jsx","covid.png","App.js","index.js"],"names":["DisplayTab","props","className","TransitionGroup","CSSTransition","timeout","classNames","content","subcontent","title","Content","React","useState","countryList","setCountryList","useEffect","a","axios","result","data","fetchData","value","recovered","cases","deaths","todayRecovered","todayCases","todayDeaths","label","selectedOption","setSelectedOption","options","map","countryData","country","customStyles","option","provided","state","color","backgroundColor","isSelected","control","borderRadius","singleValue","dropdownIndicator","defaultValue","onChange","styles","isSearchable","placeholder","App","src","covid","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAqBeA,MAnBf,SAAoBC,GAEhB,OACI,qBAAKC,UAAU,+CAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAmCC,QAAS,IAAMC,WAAW,OAA7D,SACI,gCACI,oBAAIJ,UAAU,iBAAd,SAAgCD,EAAMM,UACtC,oBAAIL,UAAU,oBAAd,SAAwD,OAArBD,EAAMO,WAAsB,WAAaP,EAAMO,WAAa,WAHnFP,EAAMM,WAO9B,mBAAGL,UAAU,eAAb,SAA6BD,EAAMQ,cCwEpCC,MAjFf,WAGE,MAAsCC,IAAMC,SAAS,IAArD,mBAAOC,EAAP,KAAoBC,EAApB,KAIAH,IAAMI,WAAU,YACC,uCAAG,4BAAAC,EAAA,sEACKC,IACnB,yDAFc,OACVC,EADU,OAMhBJ,EAAeI,EAAOC,MANN,2CAAH,qDAQfC,KACC,IAGH,MAA4CT,IAAMC,SAAS,CAAES,MAAO,CAAEC,UAAW,KAAMC,MAAO,KAAMC,OAAQ,KAAMC,eAAe,KAAMC,WAAW,KAAMC,YAAY,MAAOC,MAAO,qBAAlL,mBAAOC,EAAP,KAAuBC,EAAvB,KAGMC,EAAWlB,EAAYmB,KAAI,SAAAC,GAAW,MAAK,CAAEZ,MAAOY,EAAaL,MAAOK,EAAYC,YAGpFC,EAAe,CACnBC,OAAQ,SAACC,EAAUC,GAAX,mBAAC,eACJD,GADG,IAENE,MAAO,UACPC,gBAAiBF,EAAMG,WAAa,UAAY,QAChD,UAAW,CACTD,gBAAiB,cAIrBE,QAAS,SAAAL,GAAQ,kCACZA,GADY,IAEfM,aAAa,EACbH,gBAAgB,UAChBD,MAAM,aAIRK,YAAa,SAACP,EAAUC,GAEtB,OAAO,2BAAID,GAAX,IAAqBE,MADT,aAKdM,kBAAmB,SAACR,EAAUC,GAG5B,OAAO,2BAAKD,GAAZ,IAAsBE,MADR,cAMlB,OACE,sBAAKrC,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,IAAD,CAAQA,UAAU,kBAChB4C,aAAcjB,EAAgBkB,SAAUjB,EAAmBC,QAASA,EACpEiB,OAAQb,EAAcc,cAAc,EAAMC,YAAa,0CAGzD,sBAAKhD,UAAU,iBAAf,UACE,cAAC,EAAD,CAAYO,MAAM,UAAUF,QAASsB,EAAeD,MAAOpB,WAAY,OACvE,cAAC,EAAD,CAAYC,MAAM,YAAYF,QAASsB,EAAeR,MAAMC,UAAWd,WAAYqB,EAAeR,MAAMI,oBAG1G,sBAAKvB,UAAU,iBAAf,UACE,cAAC,EAAD,CAAYO,MAAM,QAAQF,QAASsB,EAAeR,MAAME,MAAOf,WAAYqB,EAAeR,MAAMK,aAChG,cAAC,EAAD,CAAYjB,MAAM,SAASF,QAASsB,EAAeR,MAAMG,OAAQhB,WAAYqB,EAAeR,MAAMM,qBC/E7F,MAA0B,kCC0B1BwB,MApBf,WACE,OACE,sBAAKjD,UAAU,gBAAf,UAEE,qBAAKA,UAAU,wCAAf,SACE,qBAAKA,UAAU,cAAf,SACE,qBAAKkD,IAAKC,EAAOC,IAAI,QAAQpD,UAAU,eAG3C,qBAAKA,UAAU,yCAAf,SACE,sBAAKA,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,2BACA,cAAC,EAAD,IACA,mFCfVqD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.995342ff.chunk.js","sourcesContent":["import React from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nfunction DisplayTab(props) {\r\n\r\n    return (\r\n        <div className=\"col-12 col-sm-12 col-md-6 displaytab-wrapper\">\r\n            <div className=\"displaytab shadow  \">\r\n                <TransitionGroup>\r\n                    <CSSTransition key={props.content} timeout={1000} classNames=\"fade\">\r\n                        <div>\r\n                            <h1 className=\"displaycontent\">{props.content}</h1>\r\n                            <h2 className=\"displaysubcontent\">{props.subcontent !== null ? 'Today: +' + props.subcontent : null}</h2>\r\n                        </div>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <p className=\"displaytitle\">{props.title}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayTab","import React from 'react'\r\nimport Select from 'react-select'\r\nimport axios from 'axios';\r\nimport DisplayTab from './DisplayTab';\r\n\r\n\r\nfunction Content() {\r\n\r\n  //Init a state to set the countrylists after getting data from the API\r\n  const [countryList, setCountryList] = React.useState([]);\r\n\r\n  //Fetch the countries slug from the API:\r\n  //Add second argument [] to prevent continuos calling\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(\r\n        'https://corona.lmao.ninja/v2/countries?yesterday&sort',\r\n      );\r\n\r\n      //Set CountryList to the data got (an array of objects)\r\n      setCountryList(result.data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  //Set current state selectedOption if select any country from the list\r\n  const [selectedOption, setSelectedOption] = React.useState({ value: { recovered: null, cases: null, deaths: null, todayRecovered:null, todayCases:null, todayDeaths:null}, label: 'Choose a country' });\r\n\r\n  //Append the countries into the select bar with the frame {value:all the contents inside that country, and label:country name}\r\n  const options = (countryList.map(countryData => ({ value: countryData, label: countryData.country })));\r\n\r\n  //Styles for searchbar with react-select\r\n  const customStyles = {\r\n    option: (provided, state) => ({\r\n      ...provided,\r\n      color: '#F27A5E',\r\n      backgroundColor: state.isSelected ? '#6D9E5D' : 'white',\r\n      \"&:hover\": {\r\n        backgroundColor: \"#CBD9C7\",\r\n      }\r\n    }),\r\n\r\n    control: provided =>({\r\n      ...provided,\r\n      borderRadius:0,\r\n      backgroundColor:'#B4DCC1',\r\n      color:'#F27A5E'\r\n    }),\r\n\r\n    //Placeholder text color\r\n    singleValue: (provided, state) => {\r\n      const color='#F27A5E';\r\n      return {...provided, color};\r\n    },\r\n\r\n    //Dropdown menu button;\r\n    dropdownIndicator: (provided, state) => {\r\n     \r\n      const color = '#F27A5E';\r\n      return { ...provided, color };\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"datacontent \">\r\n      <div className=\"row\">\r\n        <Select className=\"searchbarconfig\"\r\n          defaultValue={selectedOption} onChange={setSelectedOption} options={options}\r\n          styles={customStyles} isSearchable={true} placeholder={<p>Hello</p>} />\r\n      </div>\r\n     \r\n        <div className=\"row displayrow\">\r\n          <DisplayTab title=\"Country\" content={selectedOption.label} subcontent={null} />\r\n          <DisplayTab title=\"Recovered\" content={selectedOption.value.recovered} subcontent={selectedOption.value.todayRecovered} />\r\n        </div>\r\n\r\n        <div className=\"row displayrow\">\r\n          <DisplayTab title=\"Cases\" content={selectedOption.value.cases} subcontent={selectedOption.value.todayCases} />\r\n          <DisplayTab title=\"Deaths\" content={selectedOption.value.deaths} subcontent={selectedOption.value.todayDeaths}/>\r\n        </div>\r\n      </div>\r\n\r\n   \r\n  )\r\n}\r\n\r\nexport default Content;","export default __webpack_public_path__ + \"static/media/covid.293799f8.png\";","\nimport './App.css';\nimport Content from './components/Content';\nimport covid from './covid.png';\n\n\nfunction App() {\n  return (\n    <div className=\"wholepage row\">\n      \n      <div className=\"col-12 col-md-3 col-lg-3 figurecolumn\">\n        <div className=\"covidfigure\">\n          <img src={covid} alt=\"covid\" className=\"figure\"/>\n        </div>\n      </div>\n      <div className=\"col-12 col-md-8 col-lg-8 contentcolumn\">\n        <div className=\"content\">\n          <h1 className=\"title\">COVID TRACKER</h1>\n          <Content/>\n          <p>Source: https://github.com/disease-sh/API</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}