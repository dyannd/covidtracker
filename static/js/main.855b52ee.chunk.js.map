{"version":3,"sources":["components/DisplayTab.jsx","components/SearchBar.jsx","covid.png","App.js","index.js"],"names":["DisplayTab","props","className","class","TransitionGroup","CSSTransition","timeout","classNames","content","title","SearchBar","React","useState","countryList","setCountryList","useEffect","a","axios","result","Object","entries","data","fetchData","value","All","confirmed","deaths","recovered","population","updated","country","label","selectedOption","setSelectedOption","options","map","customStyles","option","provided","state","color","backgroundColor","isSelected","singleValue","opacity","isDisabled","transition","dropdownIndicator","defaultValue","onChange","styles","isSearchable","placeholder","App","src","covid","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAgBeA,MAdf,SAAoBC,GAEhB,OACI,sBAAKC,UAAW,iDAAiDD,EAAME,MAAvE,UACG,cAACC,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,CAAmCC,QAAS,IAAMC,WAAW,OAA7D,SACC,oBAAIL,UAAU,iBAAd,SAAgCD,EAAMO,WADnBP,EAAMO,WAI1B,mBAAGN,UAAU,eAAb,SAA6BD,EAAMQ,YCuEhCC,MA5Ef,WAGI,MAAoCC,IAAMC,SAAS,IAAnD,mBAAOC,EAAP,KAAoBC,EAApB,KAIEH,IAAMI,WAAU,YACC,uCAAC,4BAAAC,EAAA,sEACSC,IACpB,6CAFW,OACNC,EADM,OAKZJ,EAAeK,OAAOC,QAAQF,EAAOG,OALzB,2CAAD,qDAOfC,KACD,IAGH,MAA4CX,IAAMC,SAAS,CAACW,MAAM,CAACC,IAAI,CAACC,UAAU,KAAKC,OAAO,KAAKC,UAAU,KAAKC,WAAW,KAAKC,QAAQ,GAAIC,QAAQ,OAAQC,MAAM,qBAApK,mBAAOC,EAAP,KAAuBC,EAAvB,KAGMC,EAASrB,EAAYsB,KAAI,SAAAL,GAAO,MAAK,CAACP,MAAMO,EAAQ,GAAIC,MAAMD,EAAQ,OAGtEM,EAAe,CACjBC,OAAQ,SAACC,EAAUC,GAAX,mBAAC,eACJD,GADG,IAENE,MAAO,UACPC,gBAAiBF,EAAMG,WAAW,UAAU,QAC5C,UAAW,CACTD,gBAAiB,cAIrBE,YAAa,SAACL,EAAUC,GACtB,IAAMK,EAAUL,EAAMM,WAAa,EAAI,EAGvC,OAAO,2BAAKP,GAAZ,IAAsBM,UAASE,WAFZ,mBAIrBC,kBAAkB,SAACT,EAAUC,GAG1B,kCAAUD,GAAV,IAAoBG,gBAFG,UAEcD,MADvB,YAQrB,OACI,sBAAKtC,UAAU,cAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,IAAD,CAASA,UAAU,kBAClB8C,aAAchB,EAAgBiB,SAAUhB,EAAmBC,QAASA,EACpEgB,OAAQd,EAAce,cAAc,EAAMC,YAAa,0CAG1D,sBAAKlD,UAAU,kBAAf,UACI,cAAC,EAAD,CAAYO,MAA8B,WAAvBuB,EAAeD,MAAiB,KAAK,UAAWvB,QAAgC,WAAvBwB,EAAeD,MAAiB,SAASC,EAAeD,QACpI,cAAC,EAAD,CAAYtB,MAAM,YAAYD,QAASwB,EAAeT,MAAMC,IAAIG,eAGpE,sBAAKzB,UAAU,kBAAf,UACE,cAAC,EAAD,CAAYO,MAAM,WAAWD,QAASwB,EAAeT,MAAMC,IAAIC,YAC/D,cAAC,EAAD,CAAYhB,MAAM,SAASD,QAASwB,EAAeT,MAAMC,IAAIE,YAE/D,qBAAKxB,UAAU,kBAAf,SACE,cAAC,EAAD,CAAYO,MAAM,eAAeD,QAAgC,WAAvBwB,EAAeD,MAAiBG,EAAQ,GAAGX,MAAMC,IAAIK,QAA0C,MAAlCG,EAAeT,MAAMC,IAAIK,QAAcV,OAAOC,QAAQY,EAAeT,OAAO,GAAG,GAAGM,QAAQG,EAAeT,MAAMC,IAAIK,QAAS1B,MAAM,wCC3EtO,MAA0B,kCC0B1BkD,MApBf,WACE,OACE,sBAAKnD,UAAU,gBAAf,UAEE,qBAAKA,UAAU,+CAAf,SACE,qBAAKA,UAAU,cAAf,SACE,qBAAKoD,IAAKC,EAAOC,IAAI,QAAQtD,UAAU,eAG3C,qBAAKA,UAAU,gDAAf,SACE,sBAAKA,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,2BACA,cAAC,EAAD,IACA,iFCfVuD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.855b52ee.chunk.js","sourcesContent":["import React from 'react';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nfunction DisplayTab(props){\r\n    \r\n    return(\r\n        <div className={\"displaytab col-lg-6 col-md-6 col-sm-12 shadow \"+props.class}>\r\n           <TransitionGroup>\r\n            <CSSTransition key={props.content} timeout={1000} classNames=\"fade\">\r\n             <h1 className=\"displaycontent\">{props.content}</h1>\r\n            </CSSTransition>\r\n           </TransitionGroup>\r\n            <p className=\"displaytitle\">{props.title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayTab","import React  from 'react'\r\nimport Select from 'react-select'\r\nimport axios from 'axios';\r\nimport DisplayTab from './DisplayTab';\r\n\r\n\r\nfunction SearchBar (){\r\n    \r\n  //Init a state to set the countrylists after getting data from the API\r\n    const [countryList, setCountryList]=React.useState([]);\r\n\r\n      //Fetch the countries slug from the API:\r\n      //Add second argument [] to prevent continuos calling\r\n      React.useEffect(()=>{\r\n        const fetchData=async () => {\r\n            const result = await axios(\r\n             'https://covid-api.mmediagroup.fr/v1/cases',\r\n             );\r\n            //the data has the type of nested key:value pairs, so use Object.entries to convert them to nested Arrays, which can be used to map data\r\n            setCountryList(Object.entries(result.data))\r\n            };\r\n        fetchData();\r\n    }, []);\r\n\r\n    //Set current state selectedOption if select any country from the list\r\n    const [selectedOption, setSelectedOption] = React.useState({value:{All:{confirmed:null,deaths:null,recovered:null,population:null,updated:[], country:null }},label:'Choose a country'});\r\n\r\n    //Append the countries into the select bar with the frame {value:all the contents inside that country, and label:country name}\r\n    const options=(countryList.map(country => ({value:country[1], label:country[0]})));\r\n    \r\n    //Styles for searchbar with react-select\r\n    const customStyles = {\r\n        option: (provided, state) => ({\r\n          ...provided,\r\n          color: '#231613',\r\n          backgroundColor: state.isSelected?'#6D9E5D':'white',\r\n          \"&:hover\": {\r\n            backgroundColor: \"#CBD9C7\",\r\n          }\r\n        }),\r\n    \r\n        singleValue: (provided, state) => {\r\n          const opacity = state.isDisabled ? 0 : 1;\r\n          const transition = 'opacity 100ms';\r\n      \r\n          return { ...provided, opacity, transition };\r\n        },\r\n        dropdownIndicator:(provided, state) =>{\r\n           const backgroundColor= '#6D9E5D';\r\n           const color = 'white';\r\n           return{...provided, backgroundColor, color};\r\n        }\r\n      }\r\n      \r\n  \r\n      //Have some exceptions for Global stats\r\n      //If the updated content is not found with All, then find the next object (state/city) that contain the updated time. which is the first index object of the first index entry\r\n    return(\r\n        <div className=\"datacontent\">\r\n          <div className=\"row\">\r\n            <Select  className=\"searchbarconfig\"\r\n             defaultValue={selectedOption} onChange={setSelectedOption} options={options} \r\n             styles={customStyles} isSearchable={true} placeholder={<p>Hello</p>}/>\r\n          </div>     \r\n             \r\n          <div className=\" row displayrow\">\r\n              <DisplayTab title={selectedOption.label===\"Global\"?null:\"Country\"} content={selectedOption.label===\"Global\"?\"Global\":selectedOption.label}/>\r\n              <DisplayTab title=\"Recovered\" content={selectedOption.value.All.recovered}/>\r\n           </div>\r\n          \r\n          <div className=\" row displayrow\">\r\n            <DisplayTab title=\"Cofirmed\" content={selectedOption.value.All.confirmed}/>\r\n            <DisplayTab title=\"Deaths\" content={selectedOption.value.All.deaths}/>\r\n          </div>\r\n          <div className=\" row displayrow\">\r\n            <DisplayTab title=\"Last Updated\" content={selectedOption.label===\"Global\"?options[0].value.All.updated:selectedOption.value.All.updated==null?Object.entries(selectedOption.value)[1][1].updated:selectedOption.value.All.updated} class=\"col-lg-12 col-md-12 col-sm-12\"/>\r\n          </div>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","export default __webpack_public_path__ + \"static/media/covid.293799f8.png\";","\nimport './App.css';\nimport SearchBar from \"./components/SearchBar.jsx\";\nimport covid from './covid.png';\n\n\nfunction App() {\n  return (\n    <div className=\"wholepage row\">\n      \n      <div className=\"col col-sm-12 col-md-3 col-lg-3 figurecolumn\">\n        <div className=\"covidfigure\">\n          <img src={covid} alt=\"covid\" className=\"figure\"/>\n        </div>\n      </div>\n      <div className=\"col col-sm-12 col-md-8 col-lg-8 contentcolumn\">\n        <div className=\"content\">\n          <h1 className=\"title\">COVID TRACKER</h1>\n          <SearchBar/>\n          <p>Source: https://mmediagroup.fr/covid-19</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}